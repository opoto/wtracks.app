<project xmlns:ivy="antlib:org.apache.ivy.ant" name="wtracks" default="compile" >
<!--
To use this script, you should create a "ant.properties" file in current directory, containing the following properties value:
  ivy.jar: the path of your ivy jar file
  sdk.dir: the path to your appengine SDK installation
  email: your google account identifier
-->
  <property file="ant.properties" />
  <path id="ivy.lib.path">
    <pathelement path="${ivy.jar}"/>
  </path>
  <taskdef resource="org/apache/ivy/ant/antlib.xml"
         uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  <property name="ivy.lib.dir" value="war/WEB-INF/lib" />

  <import file="${sdk.dir}/config/user/ant-macros.xml" />

  <path id="project.classpath">
    <pathelement path="war/WEB-INF/classes" />
    <fileset dir="war/WEB-INF/lib">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${sdk.dir}/lib">
      <include name="shared/**/*.jar" />
    </fileset>
  </path>

  <available property="links.exists" file="war/img" />
  <target name="createlinks" unless="links.exists">
    <symlink link="war/img" resource="../../common/img" failonerror="false" />
    <symlink link="war/js" resource="../../common/js" failonerror="false" overwrite="true" />
    <symlink link="war/tracks" resource="../../common/tracks" failonerror="false" />
    <symlink link="war/html" resource="../../common/html" failonerror="false" />
  </target>
  
  <target name="copyjars" depends="createlinks"
      description="Copies requires JARS (App Engine JARs and others) to the WAR.">
    <copy
        todir="war/WEB-INF/lib"
        flatten="true">
      <fileset dir="${sdk.dir}/lib/user">
        <include name="**/*.jar" />
      </fileset>
    </copy>
    <ivy:retrieve />
  </target>

  <target name="compile" depends="copyjars"
      description="Compiles Java source and copies other source files to the WAR.">
    <mkdir dir="war/WEB-INF/classes" />
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <javac
        srcdir="src"
        destdir="war/WEB-INF/classes"
        classpathref="project.classpath"
        debug="on" />
  </target>

  <target name="datanucleusenhance" depends="compile"
      description="Performs JDO enhancement on compiled data classes.">
    <enhance_war war="war" />
  </target>

  <target name="runserver" depends="datanucleusenhance"
      description="Starts the development server.">
    <dev_appserver war="war" />
  </target>

  <target name="update" depends="datanucleusenhance"
      description="Uploads the application to App Engine.">
    <appcfg action="update" war="war">
      <options>
        <arg value="--email=${email}"/>
      </options>
    </appcfg>
  </target>

  <target name="update_indexes" depends="datanucleusenhance"
      description="Uploads just the datastore index configuration to App Engine.">
    <appcfg action="update_indexes" war="war">
      <options>
        <arg value="--email=${email}"/>
      </options>
    </appcfg>
  </target>

  <target name="rollback" depends="datanucleusenhance"
      description="Rolls back an interrupted application update.">
    <appcfg action="rollback" war="war" >
      <options>
        <arg value="--email=${email}"/>
      </options>
    </appcfg>
  </target>

  <target name="request_logs"
      description="Downloads log data from App Engine for the application.">
    <appcfg action="request_logs" email="${email}" war="war">
      <options>
        <arg value="--num_days=5"/>
      </options>
      <args>
        <arg value="logs.txt"/>
      </args>
    </appcfg>
  </target>

</project>